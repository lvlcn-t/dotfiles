#!/bin/bash

# (c) 2025 lvlcn-t - install-deps
# This script is consumed by chezmoi to install dependencies once before running the dotfiles.
# It is idempotent and can be run multiple times without causing issues.

# keyring_installed checks if a keyring is installed
keyring_installed() {
  [ -f "/etc/apt/keyrings/$1" ]
}

# install_or_update installs/updates a package if it does not exist
install_or_update() {
  sudo apt install -qq -y "$1"
}

# add_repo adds an apt repository to the system
add_repo() {
  local repo=$1
  local keyring=$2
  local url=$3
  local components=$4
  if ! grep -q "^deb .*$url" /etc/apt/sources.list /etc/apt/sources.list.d/*; then
    echo "Adding repository: $repo"
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/$keyring] $url $components" | sudo tee /etc/apt/sources.list.d/$repo.list
    sudo apt update
  else
    echo "Repository $repo already exists."
  fi
}

# install_kubectl_plugin installs a kubectl plugin using krew
# It checks if the plugin is already installed before attempting to install it.
install_kubectl_plugin() {
  local plugin=$1
  if ! kubectl krew list | grep -q "$plugin"; then
    echo "Installing krew plugin: $plugin"
    kubectl krew install "$plugin"
  fi
}

{{- if not .machine.proxy.enabled }}
if [ -z "$HTTP_PROXY" ] && [ -z "$HTTPS_PROXY" ]; then
  read -p "Do you need to set an HTTP/HTTPS Proxy? (y/n): " proxy_required
  if [[ $proxy_required == "y" ]]; then
    read -p "Enter the HTTP Proxy: " http_proxy
    read -p "Enter the HTTPS Proxy: " https_proxy
    export HTTP_PROXY=$http_proxy
    export HTTPS_PROXY=$https_proxy
  fi
fi
{{- else }}
export HTTP_PROXY={{ .machine.proxy.http }}
export HTTPS_PROXY={{ .machine.proxy.https }}
export http_proxy={{ .machine.proxy.http }}
export https_proxy={{ .machine.proxy.https }}
export NO_PROXY={{ .machine.proxy.no_proxy }}
export no_proxy={{ .machine.proxy.no_proxy }}
{{- end }}

if ! sudo grep -q "^$(whoami) ALL=(ALL:ALL) NOPASSWD:ALL" /etc/sudoers.d/$(whoami) 2>/dev/null; then
  echo "Adding user '$(whoami)' to sudoers with NOPASSWD"
  echo "$(whoami) ALL=(ALL:ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$(whoami) >/dev/null
  sudo chmod 0440 /etc/sudoers.d/$(whoami)
fi

sudo apt update && sudo apt upgrade -qq -y

necessary_packages=(git curl wget zsh tree ca-certificates software-properties-common gpg)
for package in "${necessary_packages[@]}"; do
  install_or_update "$package"
done

if [ "$SHELL" != "$(command -v zsh)" ]; then
  echo "Setting zsh as the default shell"
  sudo chsh -s "$(command -v zsh)" "$(whoami)"
fi

if ! command -v brew &>/dev/null; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
brew bundle install --file={{ .chezmoi.sourceDir }}/Brewfile

sudo install -m 0755 -d /etc/apt/keyrings

if ! command -v rustup &>/dev/null; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
fi

if ! command -v pipx &>/dev/null; then
  pipx ensurepath
fi

if ! command -v poetry &>/dev/null; then
  pipx install poetry
fi

if ! command -v nvm &>/dev/null; then
  PROFILE=/dev/null bash -c 'curl -fsSL -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash'
fi

if ! command -v docker &>/dev/null; then
  if ! keyring_installed "docker.asc"; then
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc && sudo chmod a+r /etc/apt/keyrings/docker.asc
  fi
  add_repo "docker" "docker.asc" "https://download.docker.com/linux/ubuntu" "$(. /etc/os-release && echo "$VERSION_CODENAME") stable"
  docker_packages=(docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin)
  for package in "${docker_packages[@]}"; do
    install_or_update "$package"
  done
fi

if command -v kubectl-krew &>/dev/null; then
  install_kubectl_plugin "ctx"
  install_kubectl_plugin "ns"
  install_kubectl_plugin "mc"
fi

unset -f keyring_installed install_or_update add_repo install_kubectl_plugin
